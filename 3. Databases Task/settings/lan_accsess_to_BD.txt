https://ru.stackoverflow.com/questions/1006292/%D0%A3%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF-%D0%BA-mysql-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-workbench

https://stackoverflow.com/questions/50177216/how-to-grant-all-privileges-to-root-user-in-mysql-8-0

========================================

mysql> CREATE USER 'root'@'%' IDENTIFIED BY 'PASSWORD';
mysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;
mysql> FLUSH PRIVILEGES;


#I see a lot of (wrong) answers, it is just as simple as this:

USE mysql;
CREATE USER 'user'@'localhost' IDENTIFIED BY 'P@ssW0rd';
GRANT ALL ON *.* TO 'user'@'localhost';
FLUSH PRIVILEGES;

#Note: instead of a self-created user you can use root to connect to the database. However, using the default root account to let an application connect to the database is not the preferred way.

#Alternative privileges (be careful and remember the least-privilege principle):

-- Grant user permissions to all tables in my_database from localhost --
GRANT ALL ON my_database.* TO 'user'@'localhost';

-- Grant user permissions to my_table in my_database from localhost --
GRANT ALL ON my_database.my_table TO 'user'@'localhost';

-- Grant user permissions to all tables and databases from all hosts --
GRANT ALL ON *.* TO 'user'@'*';


#You need add/change the following two lines in /etc/mysql/my.cnf and restart mysql:
[mysqld]
bind-address=0.0.0.0

sudo service mysql restart

netstat -tln
              must be: 0.0.0.0:3306

=========================================

Что бы настроить удаленный доступ с других IP:

sudo nano /etc/mysql/my.cnf

Ищем секцию [mysqld] и изменяем значение bind-address на 0.0.0.0

У меня файл my.cnf был почти пустой. Там было много текста в виде коментов, то я просто добавил:

[mysqld]
bind-address=0.0.0.0

Перезагружаем сервер:

sudo service mysql restart

Проверяем, что теперь слушает демон MySQL:

  netstat -tln

должно быть 0.0.0.0:3306

Дальше пытаемся подключится через MySQL Workbench или другим клиентом - управлялкой базами данных и получаем сообщение о том, что наш комп не может соединяться с MySQL-сервером.

host ‘192.168.1.83’ is not allowed to connect to this mysql server

где 192.168.1.83 - это IP-адрес моего ПК.

Дело в том, что MySQL не только умеет ограничить доступ извне к самому серверу, но еще и определить пользователей для доступа удаленно к определенным базам или даже таблицам.

Нужно создать пользователя и дать ему нужный доступ. Детальней расмотрим SQL-запрос на создание пользователей:

GRANT [тип прав] ON [имя базы данных].[имя таблицы] TO 'имя пользователя'@'его ip-адрес';

Что-бы создать суперпользователя, типа root, только со своим именем, USER_NAME, с полными правами для всех баз данных с доступом с любого IP и с паролем YOUR_PASSWORD:

GRANT ALL PRIVILEGES ON *.* TO 'USER_NAME'@'%' IDENTIFIED BY 'YOUR_PASSWORD' WITH GRANT OPTION;

вот еще примеры:

создать пользователя для конкретной БД:

GRANT ALL PRIVILEGES ON `my_db`.* TO USER_NAME@'%' IDENTIFIED BY 'YOUR_PASSWORD';

создать пользователя и ограничить доступ только для определенного IP:

GRANT ALL PRIVILEGES ON `my_db`.* TO USER_NAME@'192.168.1.83' IDENTIFIED BY 'YOUR_PASSWORD';

или вовсе только только для работы с сервера, например только через PhpMyAdmin:

GRANT ALL PRIVILEGES ON *.* TO USER_NAME@'localhost' IDENTIFIED BY 'YOUR_PASSWORD';

Если определились с выбором SQL-запроса, тогда его можно запустить в том же phpMyAdmin или в консоли:

Заходим в MySQL:

mysql -u root mysql -p

Пишем нужный SQL-запрос, например:

GRANT ALL PRIVILEGES ON *.* TO 'megaadmin'@'%' IDENTIFIED BY 'superparol' WITH GRANT OPTION;

Для того, чтоб изменения вошли в силу запустите запрос на обновления: FLUSH PRIVILEGES;

выходим с MySQL: EXIT;

Так же это можно сделать в графическом интерфейсе PhpMyAdmin без ввода SQL-запроса. После авторизации под рутом в PhpMyAdmin, заходим во вкладку "Учетные записи пользователей". Там все интуитивно понятно. Ниже опустив экран можно выбрать нужные привилегии на SQL-запросы (Данные), на создание баз данных и таблиц (Структура) и на управлении сервером (Администрирование), а также можно установить ограничение на использование ресурсов.
